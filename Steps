First need to get the docker images in a registry such that they can be used by
Kubernetes:


Locally build scion with;
make docker-images

Then push to the repository at digitalocean;

1. Create a token at https://cloud.digitalocean.com/account/api/tokens

2. docker login registry.digitalocean.com
username and password are the token

3.
docker tag posix-router:latest registry.digitalocean.com/scion-on-kubernetes/posix-router:latest
docker tag control:latest registry.digitalocean.com/scion-on-kubernetes/control:latest
docker tag dispatcher:latest registry.digitalocean.com/scion-on-kubernetes/dispatcher:latest
docker tag daemon:latest registry.digitalocean.com/scion-on-kubernetes/daemon:latest
docker tag tester:latest registry.digitalocean.com/scion-on-kubernetes/tester:latest

docker push registry.digitalocean.com/scion-on-kubernetes/posix-router:latest
docker push registry.digitalocean.com/scion-on-kubernetes/control:latest
docker push registry.digitalocean.com/scion-on-kubernetes/dispatcher:latest
docker push registry.digitalocean.com/scion-on-kubernetes/daemon:latest
docker push registry.digitalocean.com/scion-on-kubernetes/tester:latest

4.

(venv)  ~/P/pythonProject  py[venv]  kubectl --kubeconfig=jvanbommel-test-k8s-kubeconfig.yaml apply -f handcrafted --namespace=scion^C
(venv)  ~/P/pythonProject  py[venv]  kubectl --kubeconfig=jvanbommel-test-k8s-kubeconfig.yaml rollout restart deployment -n scion


Make sure you replace the crypto under gen folder if they have expired.
./scion.sh topology --docker -c topology/tiny4.topo

And copy over the certs, crypto and keys folders IN EACH AS, as well as certs ISD1 and trcs


kubectl --kubeconfig=jvanbommel-test-k8s-kubeconfig.yaml delete pod busybox -n scion

(venv)  ~/P/pythonProject  py[venv]   master ±  kubectl --kubeconfig=jvanbommel-test-k8s-kubeconfig.yaml run busybox --tty -i --image=busybox --restart=Never -n scion -- sh

kubectl --kubeconfig=jvanbommel-test-k8s-kubeconfig.yaml exec -it busybox --tty -i -n scion -- sh



5.
Connect into two of the eh vms;
execute:
bin/scion address

bin/end2end --remote "1-ff00:00:112,10.244.0.134" --mode client

bin/scion address
bin/end2end --local "1-ff00:00:112,10.244.0.134" --mode server


Check border router logs => it is actually getting routed via scion.

while :; do bin/end2end --remote "1-ff00:00:112,10.244.0.134:1025" --local "1-ff00:00:111,10.244.0.189" --mode client; done;
